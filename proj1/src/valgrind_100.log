nohup: ignoring input
==166484== Memcheck, a memory error detector
==166484== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==166484== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==166484== Command: ./solve_heatcond
==166484== 
--> dimension   = 2
(fread: Using pre-registered value for variable): mesh/xmin -> 0 
--> xmin        = 0.000000
(fread: Using pre-registered value for variable): mesh/xmax -> 1 
==166484== 
==166484== Process terminating with default action of signal 2 (SIGINT)
==166484==    at 0x403670: gauss_seidel(int, double**, double*, double, unsigned int) (solver.cpp:55)
==166484==    by 0x403DBB: main_solver(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, double**, double*, double, unsigned int) (solver.cpp:145)
==166484==    by 0x402C47: main (main_code.cpp:115)
--> xmax        = 1.000000
--> grid        = 100
--> fd_method   = 4
--> verify_mode = 1
--> output_mode = 1
--> k           = 1.000000
--> iter_method = Gauss-Seidel
--> eps         = 0.000000
--> max_iter    = 250000
--> output_file = sol.dat
==166484== 
==166484== HEAP SUMMARY:
==166484==     in use at exit: 1,600,840,216 bytes in 21,295 blocks
==166484==   total heap usage: 22,662 allocs, 1,367 frees, 1,601,030,269 bytes allocated
==166484== 
==166484== LEAK SUMMARY:
==166484==    definitely lost: 338,544 bytes in 47 blocks
==166484==    indirectly lost: 797,043,595 bytes in 11,060 blocks
==166484==      possibly lost: 2,960,000 bytes in 37 blocks
==166484==    still reachable: 800,498,077 bytes in 10,151 blocks
==166484==         suppressed: 0 bytes in 0 blocks
==166484== Rerun with --leak-check=full to see details of leaked memory
==166484== 
==166484== For lists of detected and suppressed errors, rerun with: -s
==166484== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
